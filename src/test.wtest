import campeones.*
import items.*
import minions.*

describe "liga de campeones" {

//Parte 1

	var campeon1 = new Campeon(puntosDeVida = 50, puntosDeAtaque = 15, dinero = 20)
	var anilloDeDoran = new AnilloDeDoran()
	var tomoAmplificador = new TomoAmplificador()
	var oleadaDeMinions = new OleadaDeMinions()
	
	
//Parte 2

	var campeon2 = new Campeon(puntosDeVida = 50, puntosDeAtaque = 15, dinero= 231)
	var oleadaDeMinions2 = new OleadaDeMinions(cantidadDeMinions=10, plusDeAtaque=25)
	var tomoAmplificador2 = new TomoAmplificador()
	

//Parte 3 baston del vacio
    
    var campeon3 = new Campeon(puntosDeVida = 50, puntosDeAtaque = 15, dinero = 800)
    var anilloDeDoran1 = new AnilloDeDoran()
    var anilloDeDoran2 = new AnilloDeDoran()
    var pocionDeVida = new PocionDeVida()
    var sombrero = new SombreroDeRabadon()
    var bastonDelVacio = new BastonDelVacio(materiales = [pocionDeVida,sombrero])
  

// Parte 3 Soporte
	
	var draven = new Campeon(puntosDeVida = 150, puntosDeAtaque = 25, dinero = 1000)
	var maokai = new Campeon(puntosDeVida = 150, puntosDeAtaque = 25, dinero = 1000)
	var janna = new Soporte(puntosDeVida = 150, puntosDeAtaque = 25, dinero = 100, campeonVinculado = draven)
    var oleadaDeMinions3 = new OleadaDeMinions(cantidadDeMinions = 100, plusDeAtaque = 0)
    
    
 //Parte 3 Ejercito de Minions
 
 	var campeon4 = new Campeon(puntosDeVida = 50, puntosDeAtaque = 20, dinero = 300)
 	var oleadaDeMinions4 = new OleadaDeMinions(cantidadDeMinions = 20, plusDeAtaque=5)
 	var oleadaDeMinions5 = new OleadaDeMinions(cantidadDeMinions = 10, plusDeAtaque=15)
    var ejercitoDeMinions= new EjercitoDeMinions(oleadasDeMinions= [oleadaDeMinions4, oleadaDeMinions5])
    
    //SOPORTE ATACA A EJERCITO
    var campeon5 = new Campeon(puntosDeVida=60, puntosDeAtaque=20, dinero= 500)
    var campeonSoporte= new Soporte(puntosDeVida=50, puntosDeAtaque=20, dinero= 500, campeonVinculado= campeon5)
    
     
	fixture {
		
		//Parte 1
		campeon1.equipar(anilloDeDoran)
		campeon1.equipar(tomoAmplificador)
	 	oleadaDeMinions.cantidadDeMinions(10)
		oleadaDeMinions.plusDeAtaque(25)
		
		//Parte 2
		campeon2.equipar(anilloDeDoran)
		campeon2.equipar(tomoAmplificador)
		
		//Parte 3
		campeon3.comprar(anilloDeDoran1)
		campeon3.comprar(anilloDeDoran2)
		campeon3.equipar(anilloDeDoran1)
		campeon3.equipar(anilloDeDoran2)
		campeon3.comprar(bastonDelVacio)
		campeon3.equipar(bastonDelVacio)
		bastonDelVacio.habilidadActivable(campeon3)
		
		
	}
	
	test "test actualizado de la parte 1 y 2" {		
	//	campeon2.atacarOleada(oleadaDeMinions2)
	//	campeon2.atacarOleada(oleadaDeMinions2)
	//	campeon2.atacarOleada(oleadaDeMinions2)
		campeon2.atacarA(oleadaDeMinions2)
		campeon2.atacarA(oleadaDeMinions2)
		campeon2.atacarA(oleadaDeMinions2)
		campeon2.desequipar(anilloDeDoran)
		campeon2.desequipar(tomoAmplificador)
		campeon2.equipar(tomoAmplificador2)
		campeon2.desequipar(tomoAmplificador2)
		assert.notThat(campeon2.estaVivo())	
	}
	
	test "draven compra item y ataca 3 veces. le queda 575 de dinero" {
		draven.comprar(tomoAmplificador)
		assert.equals(500,draven.dinero())
//		draven.atacarOleada(oleadaDeMinions3)
		draven.atacarA(oleadaDeMinions3)
		assert.equals(525,draven.dinero())
//		draven.atacarOleada(oleadaDeMinions3)
		draven.atacarA(oleadaDeMinions3)
		assert.equals(550,draven.dinero())
//		draven.atacarOleada(oleadaDeMinions3)
		draven.atacarA(oleadaDeMinions3)
		assert.equals(575,draven.dinero())
	}
	
	test "sumar dinero de minions"{
	//	campeon1.atacarOleada(oleadaDeMinions2)
		campeon1.atacarA(oleadaDeMinions2)
		assert.equals(30, campeon1.dinero())
	}
	
	test "habilidad en items "{
		tomoAmplificador.habilidadActivable(campeon1)
		assert.equals(500, campeon1.dinero())
		pocionDeVida.habilidadActivable(campeon1)
	}	
	
	
	test "vida y ataque del campeon con item equipado"{
		draven.equipar(anilloDeDoran)
		assert.equals(210,draven.vidaDeCampeon())
		assert.equals(40,draven.ataqueDeCampeon())
	}
	
	
	test "baston del vacio - campeon con 0 de da√±o recibido" {
		assert.equals(0,campeon3.danioRecibido())
	}	 
	
	
	test "baston del vacio - campeon con 500 de dinero " {
		assert.equals(500,campeon3.dinero())	
	}
	
	
	test "baston del vacio - vida que aporta con una pocion y un sombrero en sus materiales" {
		assert.equals(2.5,bastonDelVacio.vidaQueAporta(campeon3))
	}
	
	
	test "baston del vacio - ataque que aporta con una pocion y un sombrero en sus materiales" {
		assert.equals(0,bastonDelVacio.ataqueQueAporta(campeon3))
	}
	
	
	test "soporte"{
		janna.campeonVinculado(draven)
	///	draven.atacarOleada(oleadaDeMinions3)
	///	janna.atacarOleada(oleadaDeMinions3)
		draven.atacarA(oleadaDeMinions3)
		janna.atacarA(oleadaDeMinions3)
		janna.campeonVinculado(maokai)
	///	maokai.atacarOleada(oleadaDeMinions3)
	///	janna.atacarOleada(oleadaDeMinions3)
		maokai.atacarA(oleadaDeMinions3)
		janna.atacarA(oleadaDeMinions3)
		maokai.comprar(tomoAmplificador)
		janna.comprar(pocionDeVida)
		assert.that(oleadaDeMinions3.estanMuertos())
		assert.equals(90,draven.danioRecibido())
		assert.equals(40,maokai.danioRecibido())
		assert.equals(525,maokai.dinero())
		assert.equals(100,janna.danioRecibido())
		assert.that(janna.inventario().contains(pocionDeVida))
		assert.that(maokai.inventario().contains(tomoAmplificador))
		assert.that(janna.inventario().contains(tomoAmplificador))
	}
	
	test  "inventario de janna "{
		janna.campeonVinculado(draven)
		janna.dinero(5000)
		draven.dinero(5000)
		draven.comprar(anilloDeDoran1)
		draven.comprar(anilloDeDoran2)
		draven.comprar(tomoAmplificador)
		janna.comprar(pocionDeVida)
		janna.comprar(bastonDelVacio)
		assert.equals([anilloDeDoran1,anilloDeDoran2,tomoAmplificador,pocionDeVida,bastonDelVacio],janna.inventario())
	}
	
	test "inventario de draven"{
		janna.campeonVinculado(draven)
		janna.dinero(5000)
		draven.dinero(5000)
		draven.comprar(anilloDeDoran1)
		draven.comprar(anilloDeDoran2)
		draven.comprar(tomoAmplificador)
		janna.comprar(pocionDeVida)
		janna.comprar(bastonDelVacio)
		assert.equals([anilloDeDoran1,anilloDeDoran2,tomoAmplificador],draven.inventario())
	}
	
	test "Ejercito de Minions"{	
		campeon4.atacarA(ejercitoDeMinions)
		assert.that(ejercitoDeMinions.ejercitoMuerto())
		assert.notThat(campeon4.estaVivo())
	}
	
	test "Soporte ataca a ejercito"{
		
		campeonSoporte.campeonVinculado(campeon5)
		campeonSoporte.atacarA(ejercitoDeMinions)
		campeon5.atacarA(oleadaDeMinions3)
		assert.equals(80, campeon5.danioRecibido())
		
		
	}
	
	
}

